openapi: 3.0.1
info:
  version: 1.0.0-oas3
  title: Pythia-API
  description: Pythia API
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/antonkravchenko2001/pythia-api/1.0.0
  - description: Pythia application
    url: https://api.pythia.company/
paths:
  /markets:
    get:
      summary: available markets
      description: returns list of markets available for prediction
      parameters:
        - name: topics
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - nft
                - defi
                - trading
              default: trading
            description: market topics
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            description: filter on date when market was created
        - name: wageDeadlineAfter
          in: query
          required: false
          schema:
            type: string
            description: filter on date when the prediction deadline for the market
        - name: resolvesAfter
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - inprogress
              - unresolved
              - resolved
            description: status of the market
        - name: questionPattern
          in: query
          required: false
          schema:
            type: string
            description: question pattern (used in search form)
        - name: address
          in: query
          required: false
          schema:
            type: string
            description: user address
        - name: sort
          in: query
          required: false
          schema:
            type: object
            properties:
              wageDeadline:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
              resolutionDate:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
              numOfPredictors:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: A list of markets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    question:
                      type: string
                    creationDatetime:
                      type: integer
                    wageDeadline:
                      type: integer
                    resolutionDate:
                      type: integer
                    topic:
                      type: string
                    reputationTokenAddress:
                      type: string
                    options:
                      type: array
                      items:
                        type: string
                    status:
                      type: string
                      enum:
                        - inprogress
                        - unresolved
                        - resolved
                      default: inprogress
                    answer:
                      type: string
                      default: null
                    numOfPredictors:
                      type: integer
                    userInfo:
                      type: object
                      default: null
                      properties:
                        address:
                          type: boolean
  /markets/{address}:
    get:
      summary: information about the market
      description: returns list of markets available for prediction
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            description: address of the market
        - name: predictions
          in: query
          required: false
          schema:
            type: integer
            description: get last n predictions
            default: 10
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: user address
      responses:
        '200':
          description: info about the market
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  question:
                    type: string
                  creationDatetime:
                    type: integer
                  wageDeadline:
                    type: string
                  resolutionDate:
                    type: integer
                  topic:
                    type: string
                  reputationTokenAddress:
                    type: string
                  options:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                      - inprogress
                      - unresolved
                      - resolved
                    default: inprogress
                  answer:
                    type: string
                    default: null
                  numOfPredictors:
                    type: integer
                  predictions:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        encodedPrediction:
                          type: string
                  user:
                    type: object
                    default: null
                    properties:
                      address:
                        type: string
                      encodedPrediction:
                        type: string
                        default: null
                        description: users description for this market
  /users:
    get:
      summary: users
      description: returns users
      parameters:
        - name: topic
          in: query
          required: false
          schema:
            type: string
            description: filter on date when market was created
        - name: from
          in: query
          required: false
          schema:
            type: string
            description: date from which to get data
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: object
            properties:
              reputation:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
              accuracy:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    registrationDatetime:
                      type: integer
                    accuracy:
                      type: number
                    reputation:
                      type: number
  /users/{address}:
    get:
      summary: user info
      description: returns user's information
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            description: user address
        - name: topic
          in: query
          required: true
          schema:
            type: string
            description: topic
        - name: predictionDatetime
          in: query
          required: false
          schema:
            type: integer
            description: only return markets after a given date
        - name: statuses
          in: query
          required: false
          schema:
            type: array
            description: only return markets in which user participated with given status
            items:
              type: string
              enum:
                - inprogress
                - unresolved
                - resolved
              default: unresolved
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  registrationDatetime:
                    type: integer
                  accuracy:
                    type: number
                  reputation:
                    type: number
                  markets:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        question:
                          type: string
                        status:
                          type: string
                        predictionDatetime:
                          type: integer
                        correct:
                          type: boolean
                          description: whether user was correct in this market
                          default: null
                        reputation:
                          type: number
                          description: amout of reputation user received for this market
                          default: null